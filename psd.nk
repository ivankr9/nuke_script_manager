set cut_paste_input [stack 0]
version 9.0 v8
push $cut_paste_input
Group {
 name PSDTOOLS1
 tile_color 0xdec023ff
 label "\n"
 note_font_size 15
 selected true
 xpos -1112
 ypos 445
 addUserKnob {20 techParms l "Convert To EXR"}
 addUserKnob {22 ConvertPSDtoPNG l "Check PSD and Convert to EXRGroup" T "c = nuke.thisNode()\['codeConvert'].getText()\nexec(c)\nif nuke.thisNode()\['AutoCreateMerges'].getValue() == 1:\n    p = nuke.thisNode()\n    c = p\['codeDefs'].getText()\n    exec(c)\n    allLayersOrSelective(1)" +STARTLINE}
 addUserKnob {22 openPSD l "Open PSD in Photoshop" -STARTLINE T "p = nuke.thisNode()\nc = p\['codeDefs'].getText()\nexec(c)\nOpenPSD()"}
 addUserKnob {6 AutoCreateMerges l AutoMergeLayers +STARTLINE}
 AutoCreateMerges true
 addUserKnob {6 dontrender l OnlyUpdateListLayers(notconvert) -STARTLINE}
 addUserKnob {1 PNGFolder l EXRFolder}
 addUserKnob {22 OpenFolder -STARTLINE T "import webbrowser as wb\noutFolder = 'file:'+nuke.thisNode()\['PNGFolder'].getText()\nwb.open(outFolder)"}
 addUserKnob {26 l l "Merge All Layers"}
 addUserKnob {22 mergesforAll l "CreateMerges for All Layers" T "p = nuke.thisNode()\nc = p\['codeDefs'].getText()\nexec(c)\nallLayersOrSelective(1)" +STARTLINE}
 addUserKnob {6 AddRenderNode l "Add Render Node to End" -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {22 TogglePostageReads l "TogglePostageStamps onReaders" T "p = nuke.thisNode()\nc = p\['codeDefs'].getText()\nexec(c)\na = \[]\nlist_deps = AllDependentNodes(a,p)\nTogglePostageReads(list_deps)\n" +STARTLINE}
 addUserKnob {22 viewNamesToggle l "ToggleView LayerNames" -STARTLINE T "p = nuke.thisNode()\nc = p\['codeDefs'].getText()\nexec(c)\na = \[]\nlist_deps = AllDependentNodes(a,p)\nviewNames(list_deps)"}
 addUserKnob {41 file l INVISIBLE +INVISIBLE T PNGWRITE.file}
 addUserKnob {3 box_width l INVISIBLE +INVISIBLE}
 box_width 4472
 addUserKnob {3 box_height l INVISIBLE -STARTLINE +INVISIBLE}
 box_height 2526
 addUserKnob {41 box l INVISIBLE +INVISIBLE T image_crop.box}
 addUserKnob {41 in l INVISIBLE +INVISIBLE T set_layer_to_export_png.in}
 addUserKnob {41 Render l INVISIBLE +INVISIBLE T PNGWRITE.Render}
 addUserKnob {20 ListLayers_1 l ListLayers}
 addUserKnob {26 ff l "Dont Edit This Layer List Only Copy!"}
 addUserKnob {43 ListLayers l "" +STARTLINE}
 addUserKnob {20 createmergestab l CreateSelectiveMerges}
 addUserKnob {26 fs l "paste Rows from List Layers to Merge:"}
 addUserKnob {43 listMerges l "" +STARTLINE}
 listMerges "# Break to the NodeTrees  Example:\n000_norm_255_Background||P:/UrfinJuse2/scenes/ep00/ep00scDistributedSimH16/compose/layers/PSDtoEXRLayers/Passes_PSD_MAIN_002/000_norm_255_Background_0_1000_2000_0.exr\n\n\{BREAK\}\n\n001_norm_168_normalopesity66||P:/UrfinJuse2/scenes/ep00/ep00scDistributedSimH16/compose/layers/PSDtoEXRLayers/Passes_PSD_MAIN_002/001_norm_168_normalopesity66_533_1000_1736_817.exr\n\n# The syntax is important here \n# Do not make unnecessary spaces\n# And Comments (notsuported) \n# Erase everything here and Paste your Layer Rows\n"
 addUserKnob {22 mergesForSelected l CreateMerges T "p = nuke.thisNode()\nc = p\['codeDefs'].getText()\nexec(c)\nallLayersOrSelective(0)" +STARTLINE}
 addUserKnob {22 tooltip l "CopyToClipboard\{BREAK\}?" t "Use \{BREAK\} key for divide merge Pipes\nExample:\n\"\"\"95_1771_0.exr\n\n\{BREAK\} \n\n037_fdiv_255_divide||\"\"\"" -STARTLINE T "from PySide import QtGui\n\nclipboard = QtGui.QApplication.clipboard()\n\nprint clipboard.text() # show current clipboard contents\nclipboard.setText(\"\\n\{BREAK\}\\n\") # set clipboard"}
 addUserKnob {6 AddRenderNode2 l "Add Render Node to End" -STARTLINE}
 AddRenderNode2 true
 addUserKnob {20 updatePSDtab l "Update PSD"}
 addUserKnob {26 fsfs l "In This List check Order in Nuke after Update"}
 addUserKnob {43 oldtree l "" +STARTLINE}
 oldtree "\n"
 addUserKnob {22 update l UpdateReconvert T "c = nuke.thisNode()\['updateCode'].getText()\ncheck = 0\nexec(c) ##RunUPDATE" +STARTLINE}
 addUserKnob {22 checkUpdate l "Check updated List " -STARTLINE T "c = nuke.thisNode()\['updateCode'].getText()\ncheck = 1\nexec(c) ##RunUPDATE"}
 addUserKnob {20 codeConvertTab l INVISIBLE +INVISIBLE}
 addUserKnob {43 updateCode l INVISIBLE +INVISIBLE}
 updateCode "c = nuke.thisNode()\['codeDefs'].getText()\nexec(c) ##import defs\npsdTooldNode = nuke.thisNode()\npsdFileNode = psdTooldNode.input(0)\nif psdFileNode == None:\n    raise Exception('PSD File Not Connected')\n\na = \[]\nfn = nuke.thisNode()\n\nAllDeps = AllDependentNodes(a,fn) ##sortetbyCreation\nmergesReadgTuple = \[]\nif check == 1:\n    fn\['dontrender'].setValue(1)      ##<only udate List\nelse:\n    fn\['dontrender'].setValue(0)      ##reconvert and new passes\nfn\['AutoCreateMerges'].setValue(0)\n\nlnods = \[]\nlnames = \[]\nfor dep in AllDeps:\n    if dep.name()\[0] == '_':\n        lnames.append(dep.name().split('_')\[2])\n        lnods.append(dep)\n\ndoubles = \[]\nfor l,n in zip(lnames,lnods):\n    for l2,n2 in zip(lnames,lnods):\n        if l == l2:\n            if n != n2:\n                if n.name()\[0:6] == '_Read_':\n                    doubles.append(n.name()+'&'+n2.name())\n\n##reconvert\nc = fn\['codeConvert'].getText()\nexec(c)\nnewtext = fn\['ListLayers'].getText()\nnewlist = newtext.split('\\n\\n')\nrows = \[]\n\nfor duble in doubles:\n    dublesSplited = duble.split(\"&\")\[0:2]\n    mergeNode = nuke.toNode(dublesSplited\[1])\n    readerNode = nuke.toNode(dublesSplited\[0])\n    layerNum = dublesSplited\[1]\[1:4]\n    layerName = dublesSplited\[0].split(\"_\")\[2]\n    blend = mergeNode\['label'].getText().split('_')\[0]\n    opp = mergeNode\['opacity'].getValue()\n    row = layerNum +'_' + blend + '_' + str(int(opp)) + '_' + layerName +'||'+ readerNode.name() + '||' + mergeNode.name() + '||\\n'\n    rows.append(layerNum +'_' + blend + '_' + str(int(opp)) + '_' + layerName)\n    newLayerslist = matchListsReplaceParms(newlist,row,fn)\n\n\nAllDeps = AllDependentNodes(a,fn)\n\n\n\nlnames = \[]\nfor dep in AllDeps:\n    if dep.name()\[0] == '_':\n        if dep.name()\[0:6] != '_Read_':\n            lnames.append(dep.name().split('_')\[2])\n\n\n#for nl in newLayerslist:\n#   rows.append(nl.split('||')\[0])\n\nLlist = newtext.split('\\n\\n')\ntext = ''\ni = 0\nfor r  in lnames:\n    if r != '':\n        text +=  'order inNuke - ' + '\{'+ r +'\} >>> '+ Llist\[i].split('||')\[0].split('_')\[0] + '_\{' + Llist\[i].split('||')\[0].split('_')\[3] + '\} - order in PSD\\n' + '\\n'\n        i+=1\n\nfn\['oldtree'].setText(text)\n\nif len(newLayerslist) != 1:\n    newText = '\\n\\n'.join(newLayerslist)\n    fn.setXpos(int(fn\['xpos'].getValue()+400))\n    deps = fn.dependent()\n    for dep in deps:\n        dep.setInput(0,None)\n    firstNODE = createMerges(fn, newText)\n    firstNODE.setName(\"UPDATED_LAYERS\")\n    for dep in deps:\n        dep.setInput(0,fn)\n"
 addUserKnob {43 codeConvert l INVISIBLE +INVISIBLE}
 codeConvert "#!/bin/python\n# -*- coding: utf-8 -*-\nimport re\nimport os\ndef transliterate(string):\n    capital_letters = \{u'А': u'A', u'Б': u'B', u'В': u'V', u'Г': u'G',u'Д': u'D',u'Е': u'E',u'Ё': u'E',u'З': u'Z',u'И': u'I',u'Й': u'Y',u'К': u'K',u'Л': u'L',u'М': u'M',u'Н': u'N',u'О': u'O',u'П': u'P',u'Р': u'R',u'С': u'S',u'Т': u'T',u'У': u'U',u'Ф': u'F',u'Х': u'H',u'Ъ': u'',u'Ы': u'Y',u'Ь': u'',u'Э': u'E',\}\n    capital_letters_transliterated_to_multiple_letters = \{u'Ж': u'Zh',u'Ц': u'Ts',u'Ч': u'Ch',u'Ш': u'Sh',u'Щ': u'Sch',u'Ю': u'Yu',u'Я': u'Ya',\}\n    lower_case_letters = \{u'а': u'a',u'б': u'b',u'в': u'v',u'г': u'g',u'д': u'd',u'е': u'e',u'ё': u'e',u'ж': u'zh',u'з': u'z',u'и': u'i',u'й': u'y',u'к': u'k',u'л': u'l',u'м': u'm',u'н': u'n',u'о': u'o',u'п': u'p',u'р': u'r',u'с': u's',u'т': u't',u'у': u'u',u'ф': u'f',u'х': u'h',u'ц': u'ts',u'ч': u'ch',u'ш': u'sh',u'щ': u'sch',u'ъ': u'',u'ы': u'y',u'ь': u'',u'э': u'e',u'ю': u'yu',u'я': u'ya',\}\n    for cyrillic_string, latin_string in capital_letters_transliterated_to_multiple_letters.iteritems():\n        string = re.sub(ur\"%s(\[а-я])\" % cyrillic_string, ur'%s\\1' % latin_string, string)\n    for dictionary in (capital_letters, lower_case_letters):\n        for cyrillic_string, latin_string in dictionary.iteritems():\n            string = string.replace(cyrillic_string, latin_string)\n    for cyrillic_string, latin_string in capital_letters_transliterated_to_multiple_letters.iteritems():\n        string = string.replace(cyrillic_string, latin_string.upper())\n    return string\n\ndef getLayers(node):\n    #print '-----------------get Layers-----------------------'\n    metaString = 'input/psd/layers/'\n    layers = \[]\n    for k, v in node.metadata().iteritems():\n        if 'name' in k and 'layers' in k:\n            numberLayer = k.split('/')\[3]\n            r = transliterate(v.decode('cp1251'))\n            nameWSpace = \"\".join(\[z for d in ' '.join(a for a in r.split()) for x in d for z in x if z.isalnum() or z ==' ']).replace(\"  \", \" \")\n            name = ''.join((nameWSpace.split(' ')))\n            if node.metadata( metaString + numberLayer + '/flags' ) == 10:\n                name = 'disabled' + name\n            if node.metadata( metaString + numberLayer + '/flags' ) == 24 or node.metadata( metaString + numberLayer + '/flags' ) == 26:\n                if node.metadata( metaString + numberLayer + '/mask/flags') == 0:\n                    name = 'adj' + name\n                elif node.metadata( metaString + numberLayer + '/nukeName' ) == '__Layer_group_':\n                  name = 'ingrp' + name\n                else:\n                  name = 'outgrp' + name\n            nukeName = node.metadata( metaString + numberLayer + '/nukeName' )\n            blendmodeSpace = node.metadata( metaString + numberLayer + '/blendmode' )\n            blendmode =  ''.join((blendmodeSpace.split(' ')))\n            opasity = node.metadata( metaString + numberLayer + '/opacity' )\n            crops = (node.metadata( metaString + numberLayer + '/x' ), node.metadata( metaString + numberLayer + '/y' ), node.metadata( metaString + numberLayer + '/r' ),node.metadata( metaString + numberLayer + '/t' ))\n            layers.append(numberLayer.zfill(3) +'||'+ name +'||'+ nukeName +'||'+ blendmode +'||'+ str(opasity) +'||'+ str(crops))\n    return sorted(layers)\n\ndef getCreatedConvertVersionFolder(psdname,update=0):\n    nkpathname = nuke.root().name()\n    layerfolder = '/'.join((nkpathname.split('/')\[:-2])) + '/layers/PSDtoEXRLayers/' + psdname.split('.')\[0] + '_000'\n    if not os.path.isdir(layerfolder):\n        os.makedirs(layerfolder)\n    else:\n        finded = 0\n        i = 1\n        while finded != 1:\n            folderwithoutVercionNum = layerfolder\[:-3]\n            layerfolder = folderwithoutVercionNum + str(i).zfill(3)\n            \n            if not os.path.isdir(layerfolder):\n                if update != 1:\n                    os.makedirs(layerfolder)\n                    finded = 1\n                else:\n                    layerfolder = folderwithoutVercionNum + str(i-1).zfill(3)\n                    finded = 1\n            else:\n                i+=1\n    return layerfolder\n\ndef checkNonUniqueNames(list_layers):\n    listTuples = \[]\n    names = \[]\n    error_Value = \[]\n    error_layer = \[]\n    for layer in list_layers:\n        listTuples.append((layer.split('||')\[2],layer.split('||')\[1]))\n        if not layer.split('||')\[2] in names:\n            if layer.split('||')\[2] != '__Layer_group_':\n                names.append(layer.split('||')\[2])\n        else:\n            error_Value.append(layer.split('||')\[2])\n    for er in error_Value:\n        for tu in listTuples:\n            if er in tu:\n                error_layer.append(tu\[1])\n    return len(error_layer), error_layer\n\npsdTooldNode = nuke.thisNode()## <--------------------------------------------\npsdFileNode = psdTooldNode.input(0)\nif nuke.root().name() == 'Root':\n    raise Exception('Save Nk File!')\nif psdFileNode == None:\n    raise Exception('PSD File Not Connected!')\nelse:\n    #fpspl = psdFileNode\['file'].getValue().split('/')\[:-1]\n    psdname = psdFileNode\['file'].getValue().split('/')\[-1]\n    #pngnameFolder = '.'.join(psdname.split('.')\[:-1])\n    #folderPSDPath = '/'.join(fpspl)\n    #folderPNGPath = folderPSDPath+'/'+pngnameFolder\n    if psdTooldNode\['dontrender'].getValue() == 1:\n        folderPNGPath = getCreatedConvertVersionFolder(psdname,1)\n    else:\n        folderPNGPath = getCreatedConvertVersionFolder(psdname)\n    psdwidth = psdFileNode.width()\n    psdheight = psdFileNode.height()\n    psdTooldNode\['box_width'].setValue(psdwidth)\n    psdTooldNode\['box_height'].setValue(psdheight)\n    layers = getLayers(psdFileNode)\n    if len(layers) > 30:\n        if not nuke.ask('The number of layers  '+ str(len(layers)) +' is more than 30 continue?'):\n            raise Exception\n    g = checkNonUniqueNames(layers)\nif g\[0] == 0:\n    psdTooldNode\['PNGFolder'].setValue(folderPNGPath)\n    if not os.path.isdir(folderPNGPath):\n        os.mkdir(folderPNGPath)\n    files = \[]\n    listText = ''\n    for layer in layers:\n        if layer.split('||')\[1]\[0:5] == 'ingrp' or layer.split('||')\[1]\[0:6] == 'outgrp' or layer.split('||')\[1]\[0:3] == 'adj' :\n            ##create Empty named GroupName file 0_blend_\n            num = layer.split('||')\[0]\n            lname = layer.split('||')\[1]\n            blend = layer.split('||')\[3]\n            opacity = layer.split('||')\[4]\n            listText += num.zfill(3)+'_'+blend+'_'+opacity+'_'+lname+'||This_Group_or_Adjustment'  + '\\n\\n'\n            pathEMPTY = folderPNGPath +'/'+ num.zfill(3) +'_'+ blend +'_'+ lname + '.empty'\n            files.append(pathEMPTY)\n            open(pathEMPTY, 'a').close()\n        else:\n            ##check crop\n            cropsStr = layer.split('||')\[5]\[1:-1].split(', ')\n            x = 0; y = psdheight; r = psdwidth; t = 0;\n            if int(cropsStr\[0]) > x:\n                x = cropsStr\[0]\n            if int(cropsStr\[1]) < y:\n                y = cropsStr\[1]\n            if int(cropsStr\[2]) < r:\n                r = cropsStr\[2]\n            if int(cropsStr\[3]) > t:\n                t = cropsStr\[3]\n            #print x,y,r,t\n            ##set crop Parms\n            psdTooldNode\['box'].setValue((x,y,r,t))\n            ##setPath png file 0_norm_NAME_x_y_r_t.png\n            num = layer.split('||')\[0]\n            lname = layer.split('||')\[1]\n            blend = layer.split('||')\[3]\n            opacity = layer.split('||')\[4]\n            crops = cropsStr\n            \n            pathPNG = folderPNGPath +'/'+ num.zfill(3) +'_'+ blend  +'_'+ opacity +'_'+ lname + '_' + str(x)+ '_' + str(y)+ '_' + str(r)+ '_' + str(t) + '.exr'\n            listText += num.zfill(3)+'_'+blend+'_'+opacity+'_'+lname+'||'+ pathPNG +'\\n\\n'\n            #print pathPNG\n            psdTooldNode\['in'].setValue(layer.split('||')\[2])\n            psdTooldNode\['file'].setValue(pathPNG)\n            if psdTooldNode\['dontrender'].getValue() != 1:\n                nuke.execute( psdTooldNode.name(), 1, 1 ) ##                  <<< RENDER COMMENT >>>\n            files.append(pathPNG)\n    nuke.thisNode()\['ListLayers'].setValue(listText)\n    c = nuke.thisNode()\['codeDefs'].getText()\n    exec(c)\n    #nuke.root().begin()\n    #grp = createReadersGroup(files)\n    #psdTooldNode.setInput(2,grp)\n    #yp = int(psdTooldNode\['ypos'].value())\n    #xp = int(psdTooldNode\['xpos'].value())\n    #grp.setYpos(yp-200)\n    #grp.setXpos(xp)\nelse:\n    raise Exception('NOT unique names OR\\nNOT the unique length of the name from Cyrillic characters\\nin this Layers:\\n\\n' + str(g\[1:])\[2:-3])"
 addUserKnob {43 codeDefs l INVISIBLE +INVISIBLE}
 codeDefs "def CreateReader(mergeNode,prevNode,file,toolNode):\n    if file != 'This_Group_or_Adjustment':\n        pathfrom = toolNode.fullName() + '.ReadLayer'\n        xpos =  mergeNode\['xpos'].getValue()\n        ypos =  mergeNode\['ypos'].getValue()\n        nuke.selectAll()\n        nuke.invertSelection()\n        pathto = nuke.createNode('Dot')\n        pathto.setInput(0,prevNode)\n        readgroup = CopyPasteWithPath(pathfrom,pathto.fullName())\n        nuke.delete(pathto)\n        readgroup.setXpos(int(xpos-85))\n        readgroup.setYpos(int(ypos-65))\n        mergeNode.setInput(1,readgroup)\n        readgroup\['file'].setValue(file)\n        filename = file.split('/')\[-1]\n        px = filename.split('_')\[-4]\n        py = filename.split('_')\[-1].split('.')\[0]\n        readgroup\['translate'].setValue(( int(px), int(py)))\n        ms = filename.split('/')\[-1].split('_')\[0] +'_'+filename.split('/')\[-1].split('_')\[3]\n        readgroup\['message'].setValue(ms)\n        if filename.split('/')\[-1].split('_')\[3]\[0:8] == 'disabled':\n            readgroup\['disable'].setValue(1)\n        readgroup.setName('_Read_'+filename.split('/')\[-1].split('_')\[3]+'_')\n        return readgroup\n\ndef createReadersGroup(files):\n    nuke.selectAll()\n    nuke.invertSelection()\n    grp = nuke.createNode('Group')\n    grp.setName('LAYERS')\n    grp.begin()\n    rmNodes = \[]\n    shflNodes = \[]\n    xpos = 0\n    for f in files:\n        print f\n        if f\[-5:] != 'empty':\n            r = nuke.createNode('Read')\n            r.setXpos(xpos)\n            xpos += 300\n            r\['file'].setValue(f)\n            tx = nuke.createNode('Text')\n            tx\['xjustify'].setValue('center')\n            tx\['yjustify'].setValue('center')\n            tx\['output'].setValue('mask')\n            tx\['font'].setValue('//server-3d/Project/lib/python/font/verdana.ttf')\n            tx\['size'].setValue(20)\n            ms = f.split('/')\[-1].split('_')\[0] +'_'+f.split('/')\[-1].split('_')\[3]\n            tx\['message'].setValue(ms)\n            bo = nuke.createNode('BlackOutside')\n            po = nuke.createNode('Position')\n            px = f.split('_')\[-4]\n            py = f.split('_')\[-1].split('.')\[0]\n            po\['translate'].setValue(( int(px), int(py)))\n            sh = nuke.createNode('Shuffle')\n            lnames = f.split('/')\[-1].split('_')\[3:-4]\n            lnameS = '_'.join(lnames)\n            spaseceNspl = lnameS.split(' ')\n            lname = '_'.join(spaseceNspl)\n            #print f\n            #print lname\n            nuke.Layer(lname, \[lname+'.red', lname+'.green', lname+'.blue', lname+'.alpha'])\n            sh\['out'].setValue(lname)\n            rm = nuke.createNode('Remove')\n            rm\['operation'].setValue('remove')\n            rm\['channels'].setValue('rgba')\n            rmNodes.append(rm)\n            shflNodes.append(sh)\n        else:\n            pass\n    nuke.selectAll()\n    nuke.invertSelection()\n    mg = nuke.createNode('Merge2')\n    mg\['also_merge'].setValue('all')\n    nuke.createNode('Output')\n    nuke.selectAll()\n    nuke.invertSelection()\n    mgmat = nuke.createNode('Merge2')\n    mgmat\['sRGB'].setValue(1)\n    mgmat\['operation'].setValue('matte')\n    i = 0\n    for shuffleNodes, removeNodes in zip(shflNodes,rmNodes):\n        if i == 2:\n            i+=1\n        mgmat.setInput(i,shuffleNodes)\n        mg.setInput(i,removeNodes)\n        i+=1\n    mgmat.setName('PreviewMegrePassesAsMatteBlending')\n    grp.end()\n    return grp\n\ndef CopyPasteWithPath(absCopyNodePath,AbsPasteBeforePath):\n    #absCopyNodePath = 'Group1.ColorLookup1.ColorLookup1' <- Example (node.fullName())\n    nuke.root().begin()\n    listfrom = absCopyNodePath.split('.')\n    listto = AbsPasteBeforePath.split('.')\n    deep = len(listfrom)\n    i = 0\n    for grp in listfrom:\n        i += 1\n        if grp != '':\n            node = nuke.toNode(grp)\n            if deep != i:\n                node.begin()\n            else:\n                nuke.selectAll()\n                nuke.invertSelection()\n                n = nuke.toNode(grp)\n                n.setSelected(1)\n                nuke.nodeCopy(\"%clipboard%\")\n    nuke.root().begin()\n    deep = len(listto)\n    i = 0            \n    for grp in listto:\n        i += 1\n        if grp != '':\n            node = nuke.toNode(grp)\n            if deep != i:\n                node.begin()\n            else:\n                nuke.selectAll()\n                nuke.invertSelection()\n                n = nuke.toNode(grp)\n                n.setSelected(1)\n                PastedNode = nuke.nodePaste(\"%clipboard%\")\n    return PastedNode\n\ndef allLayersOrSelective(allayers=1):\n    p = nuke.thisNode()\n    gf = int(nuke.toNode('preferences')\['goofy_foot'].getValue())\n    gfset = 0\n    if gf == 1:\n      gfset = 1\n      nuke.toNode('preferences')\['goofy_foot'].setValue(0)\n    if allayers == 1 :\n        text = p\['ListLayers'].getText()\n        lastmerge = createMerges(p,text)\[1]\n        ## Last Merge Create renderNode\n        if p\['AddRenderNode'].getValue() == 1:\n            ProjectPaste(p,lastmerge)\n    else:\n        text = p\['listMerges'].getText()\n        lists = text.split('\{BREAK\}')\n        firstNodes = \[]\n        p.setXpos(int(p\['xpos'].getValue()-400))\n        for l in lists:\n            p.setXpos(int(p\['xpos'].getValue()+400))\n            firstNode,lastmerge = createMerges(p,l)\n            firstNodes.append(firstNode)\n            firstNode.setInput(0,None)\n            ## Last Merge Create renderNode\n            if p\['AddRenderNode2'].getValue() == 1:\n                ProjectPaste(p,lastmerge)\n        for firstN in firstNodes:\n            firstN.setInput(0,p)\n    if gfset == 1:\n      nuke.toNode('preferences')\['goofy_foot'].setValue(1)\n\ndef CreateCustomMerge(insertbeforeNode, parms, psdNode):\n    lastMergeNode = 'lastmerge'\n    l = parms\n    if l != '':\n      blend = l.split('_')\[1]\n      op = l.split('_')\[2]\n      lnamePalki = l.split('_')\[3]\n      lname = lnamePalki.split('||')\[0]\n      file = l.split('||')\[1]\n      number = l.split('_')\[0]\n      pathfrom = psdNode.fullName() + '.' + blend\n      lastMergeNode = CopyPasteWithPath(pathfrom,insertbeforeNode)\n      lastMergeNode\['CopyAlphaFromB'].setValue(1)\n      lastMergeNode\['opacity'].setValue(int(op))\n      lastMergeNode.setName('_'+number +'_'+ lname+ '_')\n    return lastMergeNode,file\n\ndef createMerges(psdNode, List):\n    listSpl = List.split('\\n\\n')\n    firstNode= nuke.toNode('firstFormatPSD')\n    firstNode\['box_width'].setValue(psdNode\['box_width'].getValue())\n    firstNode\['box_height'].setValue(psdNode\['box_height'].getValue())\n    formatpath =  firstNode.fullName()\n    pathto = CopyPasteWithPath(formatpath,psdNode.fullName())\n    firstNode = pathto\n    offset = 0\n    thisGroup = 0\n    xpos = pathto\['xpos'].getValue()\n    lastReader = None\n    UPLtCCMLayers = \[]\n    yoffsetUPLtCCM = 0\n    for l in listSpl:\n        thisgroup = 0\n        if l != '':\n          blend = l.split('_')\[1]\n          op = l.split('_')\[2]\n          lnamePalki = l.split('_')\[3]\n          lname = lnamePalki.split('||')\[0]\n          file = l.split('||')\[1]\n          number = l.split('_')\[0]\n          if lname\[0:3] == 'adj':\n              blend = 'Adjustment'\n          if lname\[0:5] == 'ingrp':\n              shortName  = 'endgrp'\n              thisgroup = 1\n              blend = 'PSDGroup'\n              offset += 100\n          elif lname\[0:6] == 'outgrp':\n              shortName  = lname\[6:].upper()\n              thisgroup = 1\n              blend = 'PSDGroup'\n          else: pass\n          pathfrom = psdNode.fullName() + '.' + blend\n          parentNode = pathto\n          yposParent = parentNode\['ypos'].getValue()\n          if 'UPLtCCM' in lname:\n              UPLtCCMLayers.append(l +'&'+lastReader.name())\n              yoffsetUPLtCCM += 65\n          else:\n              pathto.setYpos(int(pathto\['ypos'].getValue())+yoffsetUPLtCCM)\n              pathto = CopyPasteWithPath(pathfrom,pathto.fullName())\n              ypos = pathto\['ypos'].getValue()\n              pathto\['in'].setValue(lname)\n              pathto\['opacity'].setValue(int(op))\n              pathto.setXpos(int(xpos)+offset)\n              pathto.setName('_'+number +'_'+ lname+ '_')\n              if thisgroup == 1:\n                  pathto.setName('grp_' + shortName)\n              if lname\[0:6] == 'outgrp':\n                  offset -= 100\n              else: pass\n              if lname\[0:8] == 'disabled':\n                  pathto\['disable'].setValue(1)\n              if lname == 'Background':\n                  pathto\['set_white_alpha'].setValue(1)\n              pathto.setYpos(int(ypos)+65)\n              lastReader = CreateReader(pathto,parentNode,file,psdNode)\n              yoffsetUPLtCCM = 0\n    ## Create Use prev Layer to Create Cliping Mask\n    setupto = ''\n    lastOTL = ''\n    yposoffset = 0\n    print UPLtCCMLayers\n    if len(UPLtCCMLayers) > 0 :\n        for otl in UPLtCCMLayers:\n            parentNode = nuke.toNode(otl.split('&')\[-1])\n            ypos = int(parentNode\['ypos'].getValue())\n            l = otl.split('&')\[0]\n            if otl.split('&')\[-1] != lastOTL:\n                setupto = otl.split('&')\[-1]\n                newmerge,file = CreateCustomMerge(setupto,l,psdNode)\n                yposoffset = 0\n            else:\n                newmerge,file = CreateCustomMerge(setupto,l,psdNode)\n            lastOTL = otl.split('&')\[-1]\n            yposoffset += 65 \n            newmerge.setYpos(ypos+yposoffset)\n            setupto = newmerge.name()\n            upltccmReader = CreateReader(newmerge,parentNode,file,psdNode)\n            upltccmReader.setYpos(int(upltccmReader\['ypos'].getValue()+35))\n    return firstNode, pathto\n\ndef AllDependentNodes(a,n):\n    deps = n.dependent()\n    for dep in deps:\n        if dep not in a:\n            a.append(dep)\n            AllDependentNodes(a,dep)\n    return a\n    \ndef TogglePostageReads(listdeps):\n    i = 2\n    for dep in listdeps:\n        if dep.name()\[0:6] == '_Read_':\n            if i == 2:\n                if dep\['postage_stamp'].getValue() == 1:\n                    dep\['postage_stamp'].setValue(0)\n                    i = 0\n                else:\n                    dep\['postage_stamp'].setValue(1)\n                    i = 1\n            else:\n                dep\['postage_stamp'].setValue(i)\n    \ndef viewNames(list_deps):\n    i = 2\n    for dep in list_deps:\n        if dep.name()\[0:6] == '_Read_':\n            if i == 2:\n                if dep\['viewName'].getValue() == 1:\n                    dep\['viewName'].setValue(0)\n                    i = 0\n                else:\n                    dep\['viewName'].setValue(1)\n                    i = 1\n            else:\n                dep\['viewName'].setValue(i)\n\ndef replaceNodewithSaveConnections(sourceNODEfullname,destNodefullname):\n    nuke.root().begin()\n    listfrom = sourceNODEfullname.split('.')\n    listto = destNodefullname.split('.')\n    deep = len(listfrom)\n    i = 0\n    for grp in listfrom:\n        i += 1\n        if grp != '':\n            node = nuke.toNode(grp)\n            if deep != i:\n                node.begin()\n            else:\n                nuke.selectAll()\n                nuke.invertSelection()\n                n = nuke.toNode(grp)\n                n.setSelected(1)\n                nuke.nodeCopy(\"%clipboard%\")\n    nuke.root().begin()\n    deep = len(listto)\n    i = 0\n    for grp in listto:\n        i += 1\n        if grp != '':\n            node = nuke.toNode(grp)\n            if deep != i:\n                node.begin()\n            else:\n                nuke.selectAll()\n                nuke.invertSelection()\n                PastedNode = nuke.nodePaste(\"%clipboard%\")\n    outputs = node.dependencies()\n    inputs = node.dependent()\n    i=0\n    for o in outputs:\n        PastedNode.setInput(i,o)\n        i+=1\n    for inp in inputs:\n        i = 0\n        for conection in inp.dependencies():\n            if conection.name() == node.name():\n                inp.setInput(i,PastedNode)\n            i+=1\n    px = node\['xpos'].getValue()\n    py = node\['ypos'].getValue()\n    nuke.delete(node)\n    PastedNode.setXYpos(int(px),int(py))\n    return PastedNode\n\ndef matchListsReplaceParms(newlist, oldrow, PSDTool):\n    for newrow in newlist:\n        if newrow != '':\n            if oldrow.split('||')\[0].split('_')\[3] in newrow.split('_')\[3]:\n                newlist.remove(newrow)\n                mNode = nuke.toNode(oldrow.split('||')\[2])\n                readnode = nuke.toNode(oldrow.split('||')\[1])\n                readnode\['file'].setValue(newrow.split('||')\[1])\n                filename = newrow.split('||')\[1].split('/')\[-1]\n                px = filename.split('_')\[-4]\n                py = filename.split('_')\[-1].split('.')\[0]\n                readnode\['translate'].setValue(( int(px), int(py)))\n                ##blendmode\n                if oldrow.split('_')\[1] != newrow.split('_')\[1]:\n                    ##Replace BLEND MODE And set new Opacity set name\n                    newBlendfrom = PSDTool.fullName() + '.' + newrow.split('_')\[1]\n                    mergeFullPath = mNode.fullName()\n                    replaced_merge = replaceNodewithSaveConnections(newBlendfrom,mergeFullPath)\n                    number = oldrow.split('||')\[0].split('_')\[0]\n                    lname = oldrow.split('||')\[0].split('_')\[3]\n                    op = newrow.split('_')\[2]\n                    replaced_merge\['opacity'].setValue(int(op))\n                    replaced_merge.setName('_'+number +'_'+ lname+ '_')\n                else:\n                    if oldrow.split('_')\[2] != newrow.split('_')\[2]:\n                        mNode\['opasity'].setValue(int(newrow.split('_')\[2]))\n                    else:pass\n            else:pass\n    return newlist\n\ndef ProjectPaste(psdToolNode, toNode):\n    rnode = '.Project_or_Panorama_RenderGroup'\n    absrpathFrom = psdToolNode.fullName() + rnode\n    absrpathTO = toNode.fullName()\n    rN = CopyPasteWithPath(absrpathFrom,absrpathTO)\n    return rN\n\ndef toFullNode(fullName): ##Exmaple: fullname = \"PSDTools.firstFormatPSD\"\n    if fullName == '':\n        return nuke.root()\n    listto = fullName.split('.')\n    deep = len(listto)\n    i = 0\n    for grp in listto:\n        i += 1\n        if grp != '':\n            node = nuke.toNode(grp)\n            if deep != i:\n                try:\n                    node.begin()\n                except:\n                    nuke.message('This Knob:\\n' + fullName+'\\n\\nNeed FullName')\n            else:\n                return nuke.toNode(grp)\n\ndef OpenPSD():\n    node = nuke.thisNode()\n    if node.input(0):\n        lpth = node.input(0)\['file'].getValue()\n        psdfile = lpth.replace('/','\\\\')\n        if os.path.isfile(lpth):\n            f = 'C:/Program Files/Adobe'\n            pexe = ''\n            for item in os.listdir(f):\n                if 'CS6' in item:\n                #if 'CC' in item:\n                    if os.path.isdir(f + '/' + item):\n                        for fi in os.listdir(f + '/' + item):\n                            if fi == 'Photoshop.exe':\n                                pexe = f + '/' + item + '/' +'Photoshop.exe'\n            args = pexe + ' ' + psdfile\n            print args\n            subprocess.Popen(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)"
}
 NoOp {
  inputs 0
  name PSDGroup
  tile_color 0xa0a0aff
  note_font_size 8
  xpos 56
  ypos 343
  addUserKnob {20 User}
  addUserKnob {1 in l passname}
  addUserKnob {3 opacity}
 }
 Input {
  inputs 0
  name psd
  xpos 536
  ypos -42
 }
 Shuffle {
  in none
  name set_layer_to_export_png
  xpos 536
  ypos 48
  addUserKnob {20 Utilities}
  addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
  addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
 }
 Crop {
  box {0 2526 4472 0}
  reformat true
  crop false
  name image_crop
  xpos 536
  ypos 150
 }
 Write {
  channels rgba
  file D:/_IVAN_TEMP/PsdTooltest_local/layers/PSDtoEXRLayers/e17bg33_35_37_38_40_skl_001/061_norm_255_Ramka_0_2526_4472_0.exr
  file_type exr
  interleave channels
  version 1029
  name PNGWRITE
  knobChanged "n=nuke.thisNode()\nk=nuke.thisKnob()\nif k.name() == \"tr_net_render\":\n   n\['tr_Level'].setEnabled(k.value())\n   n\['tr_frame_range'].setEnabled(k.value())\n   n\['tr_disable_from_net_render'].setEnabled(k.value())\n"
  xpos 536
  ypos 240
  addUserKnob {20 tr_Tractor l Tractor}
  addUserKnob {6 tr_net_render l "Net render" -STARTLINE}
  addUserKnob {4 tr_Level l Level +DISABLED M {1 2 3 4}}
  addUserKnob {1 tr_frame_range l "Frame range:" +DISABLED}
  addUserKnob {6 tr_disable_from_net_render l "Disable in Net render" -STARTLINE +DISABLED}
  addUserKnob {26 tr_divider_line l "" +STARTLINE}
  addUserKnob {22 tr_last_dailies l "Open last dailies" -STARTLINE}
  addUserKnob {26 tr_divider_line1 l "" +STARTLINE}
  addUserKnob {22 tractor_spool l "tractor spool" -STARTLINE T "SITEPACKAGES = r'D:\\work_in_progress\\sandbox\\tractor_nuke'\nif SITEPACKAGES not in sys.path:\n    sys.path.append(SITEPACKAGES)\n\nimport nukeToTractor.main as main\nreload(main)\nn=nuke.thisNode()\nmain.main(n.name())\n"}
 }
 Output {
  inputs 0
  name Output1
  xpos 344
  ypos 150
 }
 NoOp {
  inputs 0
  name Adjustment
  tile_color 0x622626ff
  note_font_size 8
  xpos 56
  ypos 407
  addUserKnob {20 User}
  addUserKnob {1 in l passname}
  addUserKnob {3 opacity}
 }
 Group {
  inputs 0
  name ReadLayer
  tile_color 0x202020ff
  note_font_size 5
  selected true
  xpos -88
  ypos 405
  addUserKnob {20 User l ReadLayer}
  addUserKnob {41 file T Read75.file}
  addUserKnob {41 translate T Position75.translate}
  addUserKnob {41 message T Text75.message}
  addUserKnob {6 viewName +STARTLINE}
 }
  Input {
   inputs 0
   name get_res
   xpos 488
   ypos -138
  }
  Read {
   inputs 0
   origset true
   name Read75
   xpos 344
   ypos -40
   addUserKnob {20 Utilities}
   addUserKnob {22 readnode_nearestframe l "              set missing frame: nearest frame              " T "import node_function;nf=node_function.ReadNodeFunction('selected');nf.nearestframe()" +STARTLINE}
   addUserKnob {22 readnode_set_firstframe l "               set first and last frame to 1                " T "import node_function;nf=node_function.ReadNodeFunction('selected');nf.set_firstframe()" +STARTLINE}
   addUserKnob {22 read_reload_all_reads l "                      reload all reads                      " T "import node_function;nf=node_function.ReadNodeFunction('all');nf.reload_all_reads()" +STARTLINE}
   addUserKnob {22 read_add_anaglyph l "                     add anaglyph node                      " T "import node_function;nf=node_function.ReadNodeFunction('node');nf.add_anaglyph_node()" +STARTLINE}
  }
  Text {
   output mask
   message ""
   font //server-3d/Project/lib/python/font/verdana.ttf
   size 20
   xjustify center
   yjustify center
   Transform 1
   box {0 0 {input.width} {input.height}}
   translate {0 {(random()-0.5)*40}}
   center {2613.5 401}
   name Text75
   xpos 344
   ypos 80
   disable {{1-viewName}}
  }
  BlackOutside {
   name BlackOutside75
   xpos 344
   ypos 118
  }
  Position {
   name Position75
   xpos 344
   ypos 150
  }
  Reformat {
   inputs 0
   type "to box"
   box_width {{parent.input0.width}}
   box_height {{parent.input0.height}}
   box_fixed true
   name Reformat1
   xpos 613
   ypos 22
  }
  Merge2 {
   inputs 2
   also_merge mask
   name Merge1
   xpos 344
   ypos 214
  }
  Output {
   name Output1
   xpos 344
   ypos 406
  }
 end_group
 Reformat {
  inputs 0
  type "to box"
  box_width 4472
  box_height 2526
  box_fixed true
  name firstFormatPSD
  tile_color 0xffffffff
  xpos 248
  ypos 278
 }
 Group {
  inputs 0
  name diss
  tile_color 0x1e35ff
  label diss_DISSOLVE
  xpos 200
  ypos -496
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 255
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name A
   xpos -808
   ypos -522
   number 1
  }
set Nbf0b720 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -1000
   ypos -400
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -618
  }
set Nbf1f620 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -808
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -904
   ypos -208
  }
set Nbf33520 [stack 0]
push $Nbf33520
push $Nbf33520
push $Nbf0b720
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -712
   ypos -464
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -616
   ypos -394
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cbf520c0 [stack 0]
push $Nbf1f620
clone $Cbf520c0 {
   xpos -520
   ypos -426
   selected false
  }
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -298
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -252
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -218
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos -170
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos -130
  }
  Output {
   name Output1
   xpos -520
   ypos -74
  }
push $Nbf1f620
  Shuffle {
   in none
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -712
   ypos -560
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
 end_group
 Group {
  inputs 0
  name norm
  tile_color 0x1e35ff
  label norm_NORMAL
  xpos 56
  ypos -496
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 255
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -618
  }
set Nbfd84d0 [stack 0]
  Shuffle {
   in none
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -712
   ypos -624
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nbfd84d0
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -760
   ypos -336
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -856
   ypos -522
   number 1
  }
set Nbffb930 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -904
   ypos -336
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -808
   ypos -112
  }
set Nc00f750 [stack 0]
push $Nc00f750
push $Nc00f750
push $Nbfd84d0
push $Nbffb930
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -712
   ypos -464
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -616
   ypos -394
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cc02e2d0 [stack 0]
push $Nbfd84d0
clone $Cc02e2d0 {
   xpos -520
   ypos -426
   selected false
  }
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -298
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -234
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
set Nc05b0a0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -424
   ypos -144
  }
push $Nc05b0a0
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -543
   ypos -112
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -568
   ypos -48
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -568
   ypos -10
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -568
   ypos 48
  }
  Output {
   name Output1
   xpos -520
   ypos 118
  }
 end_group
 Group {
  inputs 0
  name pass
  tile_color 0x1e35ff
  label pass_PASS_THROUGH
  xpos 56
  ypos -560
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 255
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -618
  }
set Nbe47b70 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -664
   ypos -432
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -808
   ypos -490
   number 1
  }
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -904
   ypos -368
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -760
   ypos -272
  }
set Nc0a97b0 [stack 0]
push $Nc0a97b0
push $Nc0a97b0
push $Nbe47b70
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -304
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos -266
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos -208
  }
  Output {
   name Output1
   xpos -520
   ypos -74
  }
  Shuffle {
   inputs 0
   in none
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -856
   ypos -624
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push 0
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -856
   ypos -538
  }
push $Nbe47b70
push $Nbe47b70
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -376
   ypos -400
  }
push $Nbe47b70
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -472
   ypos -368
  }
 end_group
add_layer {darken_58 darken_58.red darken_58.green darken_58.blue darken_58.alpha}
 Group {
  inputs 0
  name dark
  tile_color 0x1e35ff
  label dark_DARKEN
  xpos 56
  ypos -426
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 148
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -734
  }
set Nc121130 [stack 0]
  Shuffle {
   in darken_58
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -712
   ypos -528
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -856
   ypos -606
   number 1
  }
set Nc135050 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -336
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nc121130
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -336
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -208
  }
set Nc1583d0 [stack 0]
push $Nc1583d0
push $Nc1583d0
push $Nc121130
push $Nc135050
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -712
   ypos -580
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -490
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cc176f80 [stack 0]
push $Nc121130
clone $Cc176f80 {
   xpos -520
   ypos -494
   selected false
  }
set Nc188730 [stack 0]
  Merge2 {
   inputs 2
   operation min
   name Darken
   xpos -616
   ypos -414
  }
push $Nc188730
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -318
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -286
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
set Nc1b7de0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -376
   ypos -240
  }
push $Nc1b7de0
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -208
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -112
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos -42
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 16
  }
  Output {
   name Output1
   xpos -520
   ypos 118
  }
 end_group
add_layer {multiply68 multiply68.red multiply68.green multiply68.blue multiply68.alpha}
 Group {
  inputs 0
  name mul
  tile_color 0x1e35ff
  label mul_MULTIPLY
  xpos 56
  ypos -362
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 214
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -798
  }
set Nc212fc0 [stack 0]
  Shuffle {
   in multiply68
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -712
   ypos -528
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -856
   ypos -670
   number 1
  }
set Nc226eb0 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -368
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nc212fc0
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -368
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -240
  }
set Nc24a220 [stack 0]
push $Nc24a220
push $Nc24a220
push $Nc212fc0
push $Nc226eb0
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -712
   ypos -644
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -554
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cc268db0 [stack 0]
push $Nc212fc0
clone $Cc268db0 {
   xpos -520
   ypos -558
   selected false
  }
set Nc27a560 [stack 0]
  Merge2 {
   inputs 2
   operation multiply
   name Darken
   xpos -616
   ypos -478
  }
push $Nc27a560
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -414
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -350
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
set Nc2a9c20 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -376
   ypos -304
  }
push $Nc2a9c20
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -272
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -136
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos -50
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
  }
  Output {
   name Output1
   xpos -520
   ypos 54
  }
 end_group
add_layer {darkencolor66 darkencolor66.red darkencolor66.green darkencolor66.blue darkencolor66.alpha}
 Group {
  inputs 0
  name dkCl
  tile_color 0x1e35ff
  label dkCl_DARKER_COLOR
  xpos 56
  ypos -304
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 168
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -810
  }
set Nc304e10 [stack 0]
  Shuffle {
   in darkencolor66
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -712
   ypos -528
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -880
   ypos -746
   number 1
  }
set Nc318d10 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -368
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nc304e10
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -368
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -240
  }
set Nc33c070 [stack 0]
push $Nc33c070
push $Nc33c070
push $Nc304e10
push $Nc318d10
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -712
   ypos -656
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -616
   ypos -586
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cc35ac80 [stack 0]
push $Nc304e10
clone $Cc35ac80 {
   xpos -520
   ypos -618
   selected false
  }
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -490
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -458
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
set Nc38c600 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -376
   ypos -368
  }
push $Nc38c600
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -336
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -232
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos -190
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos -144
  }
  Output {
   name Output1
   xpos -520
   ypos -74
  }
 end_group
add_layer {lighten67 lighten67.red lighten67.green lighten67.blue lighten67.alpha}
 Group {
  inputs 0
  name lite
  tile_color 0x1e35ff
  label lite_LIGHTEN
  xpos 56
  ypos -234
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 171
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -746
  }
set Nc3e77c0 [stack 0]
  Shuffle {
   in lighten67
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -712
   ypos -528
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -856
   ypos -650
   number 1
  }
set Nc3fb6b0 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1096
   ypos -336
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nc3e77c0
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -952
   ypos -336
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -1000
   ypos -208
  }
set Nc41ea00 [stack 0]
push $Nc41ea00
push $Nc41ea00
push $Nc3e77c0
push $Nc3fb6b0
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -712
   ypos -592
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -502
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cc43d600 [stack 0]
set Nc43d600 [stack 0]
push $Nc43d600
push $Nc3e77c0
clone $Cc43d600 {
   xpos -520
   ypos -506
   selected false
  }
set Nc44edb0 [stack 0]
  Merge2 {
   inputs 2
   operation max
   name Darken
   xpos -616
   ypos -426
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -712
   ypos -368
  }
push $Nc44edb0
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -362
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -315
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
set Nc48bea0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -396
   ypos -237
  }
push $Nc48bea0
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -176
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -112
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos -42
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 16
  }
  Output {
   name Output1
   xpos -520
   ypos 86
  }
 end_group
add_layer {screen74 screen74.red screen74.green screen74.blue screen74.alpha}
 Group {
  inputs 0
  name scrn
  tile_color 0x1e35ff
  label scrn_SCREEN
  xpos 56
  ypos -176
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 189
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -730
  }
set Nc4e7050 [stack 0]
  Shuffle {
   in screen74
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -712
   ypos -528
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -856
   ypos -602
   number 1
  }
set Nc4fafd0 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nc4e7050
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -144
  }
set Nc51e370 [stack 0]
push $Nc51e370
push $Nc51e370
push $Nc4e7050
push $Nc4fafd0
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -712
   ypos -576
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -486
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cc53cf00 [stack 0]
set Nc53cf00 [stack 0]
push $Nc53cf00
push $Nc4e7050
clone $Cc53cf00 {
   xpos -520
   ypos -490
   selected false
  }
set Nc54e6b0 [stack 0]
  Merge2 {
   inputs 2
   operation screen
   name Darken
   xpos -616
   ypos -410
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -712
   ypos -352
  }
push $Nc54e6b0
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -250
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -218
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
set Nc58b790 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -403
   ypos -148
  }
push $Nc58b790
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -144
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -48
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos 22
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 214
  }
 end_group
add_layer {colordodge38 colordodge38.red colordodge38.green colordodge38.blue colordodge38.alpha}
 Group {
  inputs 0
  name div
  tile_color 0x1e35ff
  label div_COLOR_DODGE
  xpos 56
  ypos -112
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 97
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -746
  }
set Nc5e6930 [stack 0]
  Shuffle {
   in colordodge38
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -712
   ypos -528
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -856
   ypos -618
   number 1
  }
set Nc5fa820 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -240
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nc5e6930
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -240
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -112
  }
set Nc61dba0 [stack 0]
push $Nc61dba0
push $Nc61dba0
push $Nc5e6930
push $Nc5fa820
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -712
   ypos -592
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -502
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cc63c720 [stack 0]
set Nc63c720 [stack 0]
push $Nc63c720
push $Nc5e6930
clone $Cc63c720 {
   xpos -520
   ypos -506
   selected false
  }
set Nc64ded0 [stack 0]
  Merge2 {
   inputs 2
   operation color-dodge
   name Darken
   xpos -616
   ypos -426
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -712
   ypos -368
  }
push $Nc64ded0
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -266
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -218
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
set Nc68afc0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -411
   ypos -165
  }
push $Nc68afc0
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -112
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -33
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos 39
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 112
  }
  Output {
   name Output1
   xpos -520
   ypos 342
  }
 end_group
add_layer {lineardodgeadd74 lineardodgeadd74.red lineardodgeadd74.green lineardodgeadd74.blue lineardodgeadd74.alpha}
 Group {
  inputs 0
  name lddg
  tile_color 0x1e35ff
  label lddg_LINEAR_DODGE
  xpos 56
  ypos -48
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 189
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -734
  }
set Nc6e61c0 [stack 0]
  Shuffle {
   in lineardodgeadd74
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -560
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -784
   ypos -638
   number 1
  }
set Nc6fa0c0 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nc6e61c0
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -144
  }
set Nc71d460 [stack 0]
push $Nc71d460
push $Nc71d460
push $Nc6e61c0
push $Nc6fa0c0
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -624
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -548
  }
  set Cc73c010 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -510
   disable true
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cc750900 [stack 0]
set Nc750900 [stack 0]
push $Nc750900
push $Nc6e61c0
clone $Cc73c010 {
   xpos -520
   ypos -558
   selected false
  }
clone $Cc750900 {
   xpos -520
   ypos -510
   selected false
  }
set Nc776850 [stack 0]
  MergeExpression {
   inputs 2
   expr0 "min(Br + Ar, 1.0)"
   expr1 "min(Bg + Ag, 1.0)"
   expr2 "min(Bb + Ab, 1.0)"
   name lindodge
   xpos -616
   ypos -414
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -664
   ypos -356
  }
push $Nc776850
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -328
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -286
   disable true
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -228
  }
set Nc7c2fa0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -401
   ypos -176
  }
push $Nc7c2fa0
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -144
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -66
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos 8
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
 end_group
add_layer {overlay67 overlay67.red overlay67.green overlay67.blue overlay67.alpha}
 Group {
  inputs 0
  name over
  tile_color 0x1e35ff
  label over_OVERLAY
  xpos 56
  ypos 16
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 171
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -734
  }
set Nc820f20 [stack 0]
  Shuffle {
   in overlay67
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -560
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -808
   ypos -670
   number 1
  }
set Nc834e10 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nc820f20
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge3
   xpos -952
   ypos -144
  }
set Nc858190 [stack 0]
push $Nc858190
push $Nc858190
push $Nc820f20
push $Nc834e10
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -624
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -548
   disable true
  }
  set Cc876d30 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -510
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cc88b620 [stack 0]
set Nc88b620 [stack 0]
push $Nc88b620
push $Nc820f20
clone $Cc876d30 {
   xpos -520
   ypos -558
   selected false
  }
clone $Cc88b620 {
   xpos -520
   ypos -510
   selected false
  }
set Nc8b1580 [stack 0]
  Merge2 {
   inputs 2
   operation overlay
   name Merge1
   xpos -616
   ypos -414
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -664
   ypos -356
  }
push $Nc8b1580
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -350
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -318
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -260
   disable true
  }
set Nc8ffc50 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -401
   ypos -176
  }
push $Nc8ffc50
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -144
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -80
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos -2
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
 end_group
add_layer {softLight76 softLight76.red softLight76.green softLight76.blue softLight76.alpha}
 Group {
  inputs 0
  name sLit
  tile_color 0x1e35ff
  label "sLit_SOFT_LIGHT\n"
  xpos 56
  ypos 80
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 194
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -830
  }
set Nc95dc10 [stack 0]
  Shuffle {
   in softLight76
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -560
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -808
   ypos -734
   number 1
  }
set Nc9719d0 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nc95dc10
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -144
  }
set Nc994d50 [stack 0]
push $Nc994d50
push $Nc994d50
push $Nc95dc10
push $Nc9719d0
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -720
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -644
   disable true
  }
  set Cc9b3910 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -606
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cc9c8200 [stack 0]
set Nc9c8200 [stack 0]
push $Nc9c8200
push $Nc95dc10
clone $Cc9b3910 {
   xpos -520
   ypos -654
   selected false
  }
clone $Cc9c8200 {
   xpos -520
   ypos -606
   selected false
  }
set Nc9ee150 [stack 0]
  MergeExpression {
   inputs 2
   expr0 "((Ar < 0.5) ? (2.0 * Br * Ar + Br * Br * (1.0 - 2.0 * Ar)) : (sqrt(Br) * (2.0 * Ar - 1.0) + 2.0 * Br * (1.0 - Ar)))"
   expr1 "((Ag < 0.5) ? (2.0 * Bg * Ag + Bg * Bg * (1.0 - 2.0 * Ag)) : (sqrt(Bg) * (2.0 * Ag - 1.0) + 2.0 * Bg * (1.0 - Ag)))"
   expr2 "((Ab < 0.5) ? (2.0 * Bb * Ab + Bb * Bb * (1.0 - 2.0 * Ab)) : (sqrt(Bb) * (2.0 * Ab - 1.0) + 2.0 * Bb * (1.0 - Ab)))"
   name softlight
   xpos -616
   ypos -510
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -664
   ypos -452
  }
push $Nc9ee150
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -350
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -295
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -237
   disable true
  }
set Nca3a9b0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -409
   ypos -171
  }
push $Nca3a9b0
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -112
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -48
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos 21
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
 end_group
add_layer {hardlight73 hardlight73.red hardlight73.green hardlight73.blue hardlight73.alpha}
 Group {
  inputs 0
  name hLit
  tile_color 0x1e35ff
  label hLit_HARD_LIGHT
  xpos 56
  ypos 144
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 186
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -766
  }
set Nca988f0 [stack 0]
  Shuffle {
   in hardlight73
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -560
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -808
   ypos -670
   number 1
  }
set Ncaac7e0 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nca988f0
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -144
  }
set Ncacfb90 [stack 0]
push $Ncacfb90
push $Ncacfb90
push $Nca988f0
push $Ncaac7e0
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -656
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -580
   disable true
  }
  set Ccaee710 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -542
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Ccb03020 [stack 0]
set Ncb03020 [stack 0]
push $Ncb03020
push $Nca988f0
clone $Ccaee710 {
   xpos -520
   ypos -590
   selected false
  }
clone $Ccb03020 {
   xpos -520
   ypos -542
   selected false
  }
set Ncb28f70 [stack 0]
  Merge2 {
   inputs 2
   operation hard-light
   bbox A
   name Merge23
   xpos -586
   ypos -451
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -664
   ypos -388
  }
push $Ncb28f70
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -286
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -254
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -208
   disable true
  }
set Ncb77640 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -347
   ypos -144
  }
push $Ncb77640
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -144
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -80
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos -2
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
 end_group
add_layer {colorBurno56 colorBurno56.red colorBurno56.green colorBurno56.blue colorBurno56.alpha}
 Group {
  inputs 0
  name idiv
  tile_color 0x1e35ff
  label idiv_COLOR_BURN
  xpos -88
  ypos -112
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 143
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -766
  }
set Ncbd5720 [stack 0]
  Shuffle {
   in colorBurno56
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -560
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -808
   ypos -702
   number 1
  }
set Ncbe9610 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Ncbd5720
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -144
  }
set Ncc0c9a0 [stack 0]
push $Ncc0c9a0
push $Ncc0c9a0
push $Ncbd5720
push $Ncbe9610
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -656
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -580
   disable true
  }
  set Ccc2b520 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -542
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Ccc3fe10 [stack 0]
set Ncc3fe10 [stack 0]
push $Ncc3fe10
push $Ncbd5720
clone $Ccc2b520 {
   xpos -520
   ypos -590
   selected false
  }
clone $Ccc3fe10 {
   xpos -520
   ypos -542
   selected false
  }
set Ncc65d70 [stack 0]
  Merge2 {
   inputs 2
   operation color-burn
   bbox A
   name Merge23
   xpos -586
   ypos -451
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -664
   ypos -388
  }
push $Ncc65d70
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -286
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -254
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -196
   disable true
  }
set Nccb4440 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -401
   ypos -176
  }
push $Nccb4440
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -144
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -80
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos -2
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
 end_group
add_layer {linearBurno73 linearBurno73.red linearBurno73.green linearBurno73.blue linearBurno73.alpha}
 Group {
  inputs 0
  name lbrn
  tile_color 0x1e35ff
  label lbrn_LINEAR_BURN
  xpos -88
  ypos -48
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 186
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -758
  }
set Ncd12400 [stack 0]
  Shuffle {
   in linearBurno73
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -560
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -808
   ypos -662
   number 1
  }
set Ncd26170 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -240
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Ncd12400
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -240
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -112
  }
set Ncd494d0 [stack 0]
push $Ncd494d0
push $Ncd494d0
push $Ncd12400
push $Ncd26170
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -648
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -572
   disable true
  }
  set Ccd680f0 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -534
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Ccd7c9e0 [stack 0]
set Ncd7c9e0 [stack 0]
push $Ncd7c9e0
push $Ncd12400
clone $Ccd680f0 {
   xpos -520
   ypos -582
   selected false
  }
clone $Ccd7c9e0 {
   xpos -520
   ypos -534
   selected false
  }
set Ncda2930 [stack 0]
  MergeExpression {
   inputs 2
   expr0 "max(Br + Ar - 1.0, 0.0)"
   expr1 "max(Bg + Ag - 1.0, 0.0)"
   expr2 "max(Bb + Ab - 1.0, 0.0)"
   name linburn
   xpos -597
   ypos -426
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -664
   ypos -380
  }
push $Ncda2930
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -278
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -246
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -188
   disable true
  }
set Ncdef070 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -353
   ypos -144
  }
push $Ncdef070
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -144
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -80
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos -2
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
 end_group
add_layer {lightercolor45 lightercolor45.red lightercolor45.green lightercolor45.blue lightercolor45.alpha}
 Group {
  inputs 0
  name lgCl
  tile_color 0x1e35ff
  label lgCl_LIGHTER_COLOR
  xpos -88
  ypos 16
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 115
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -746
  }
set Nce4d190 [stack 0]
  Shuffle {
   in lightercolor45
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -560
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -798
   ypos -682
   number 1
  }
set Nce61080 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -971
   ypos -87
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nce4d190
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -827
   ypos -87
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -875
   ypos 41
  }
set Nce84430 [stack 0]
push $Nce84430
push $Nce84430
push $Nce4d190
push $Nce61080
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -636
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -560
   disable true
  }
  set Ccea2fc0 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -522
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cceb78b0 [stack 0]
set Nceb78b0 [stack 0]
push $Nceb78b0
push $Nce4d190
clone $Ccea2fc0 {
   xpos -520
   ypos -570
   selected false
  }
clone $Cceb78b0 {
   xpos -520
   ypos -522
   selected false
  }
set Ncedd800 [stack 0]
  Merge2 {
   inputs 2
   operation max
   name lightcolor
   xpos -583
   ypos -426
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -664
   ypos -368
  }
push $Ncedd800
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -266
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -202
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -144
   disable true
  }
set Ncf2bee0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -328
   ypos -80
  }
push $Ncf2bee0
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -80
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -16
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos 30
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
 end_group
add_layer {vivdlight62 vivdlight62.red vivdlight62.green vivdlight62.blue vivdlight62.alpha}
 Group {
  inputs 0
  name vLit
  tile_color 0x1e35ff
  label vLit_VIVID_LIGHT
  xpos -88
  ypos 80
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 158
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -764
  }
set Ncf89e60 [stack 0]
  Shuffle {
   in vivdlight62
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -560
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -808
   ypos -682
   number 1
  }
set Ncf9dd70 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Ncf89e60
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -144
  }
set Ncfc1130 [stack 0]
push $Ncfc1130
push $Ncfc1130
push $Ncf89e60
push $Ncf9dd70
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -654
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -578
   disable true
  }
  set Ccfdfcd0 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -540
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Ccff45c0 [stack 0]
set Ncff45c0 [stack 0]
push $Ncff45c0
push $Ncf89e60
clone $Ccfdfcd0 {
   xpos -520
   ypos -588
   selected false
  }
clone $Ccff45c0 {
   xpos -520
   ypos -540
   selected false
  }
set Nd01a510 [stack 0]
  MergeExpression {
   inputs 2
   expr0 "((Ar < 0.5) ? (((2.0 * Ar) == 0.0) ? (2.0 * Ar) : max((1.0 - ((1.0 - Br) / (2.0 * Ar))), 0.0)) : (((2.0 * (Ar - 0.5)) == 1.0) ? (2.0 * (Ar - 0.5)) : min(Br / (1.0 - (2.0 * (Ar - 0.5))), 1.0)) )"
   expr1 "((Ag < 0.5) ? (((2.0 * Ag) == 0.0) ? (2.0 * Ag) : max((1.0 - ((1.0 - Bg) / (2.0 * Ag))), 0.0)) : (((2.0 * (Ag - 0.5)) == 1.0) ? (2.0 * (Ag - 0.5)) : min(Bg / (1.0 - (2.0 * (Ag - 0.5))), 1.0)) )"
   expr2 "((Ab < 0.5) ? (((2.0 * Ab) == 0.0) ? (2.0 * Ab) : max((1.0 - ((1.0 - Bb) / (2.0 * Ab))), 0.0)) : (((2.0 * (Ab - 0.5)) == 1.0) ? (2.0 * (Ab - 0.5)) : min(Bb / (1.0 - (2.0 * (Ab - 0.5))), 1.0)) )"
   name vividlight
   xpos -592
   ypos -444
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -664
   ypos -386
  }
push $Nd01a510
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -284
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -242
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -184
   disable true
  }
set Nd066e80 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -353
   ypos -144
  }
push $Nd066e80
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -112
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -48
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos 8
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
 end_group
add_layer {linearlight linearlight.red linearlight.green linearlight.blue linearlight.alpha}
 Group {
  inputs 0
  name lLit
  tile_color 0x1e35ff
  label lLit_LINEAR_LIGHT
  xpos -88
  ypos 144
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 255
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -746
  }
set Nd0c4e10 [stack 0]
  Shuffle {
   in linearlight
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -560
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -808
   ypos -668
   number 1
  }
set Nd0d8b40 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nd0c4e10
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -144
  }
set Nd0fbec0 [stack 0]
push $Nd0fbec0
push $Nd0fbec0
push $Nd0c4e10
push $Nd0d8b40
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -636
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -560
  }
  set Cd11aa50 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -522
   disable true
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cd12f340 [stack 0]
set Nd12f340 [stack 0]
push $Nd12f340
push $Nd0c4e10
clone $Cd11aa50 {
   xpos -520
   ypos -570
   selected false
  }
clone $Cd12f340 {
   xpos -520
   ypos -522
   selected false
  }
set Nd155290 [stack 0]
  MergeExpression {
   inputs 2
   expr0 "(Ar < 0.5 ? max(Br + (2.0 * Ar) - 1.0, 0)  :  min(Br + (2.0 * (Ar - 0.5)), 1.0))"
   expr1 "(Ag < 0.5 ? max(Bg + (2.0 * Ag) - 1.0, 0)  :  min(Bg + (2.0 * (Ag - 0.5)), 1.0))"
   expr2 "(Ab < 0.5 ? max(Bb + (2.0 * Ab) - 1.0, 0)  :  min(Bb + (2.0 * (Ab - 0.5)), 1.0))"
   name Linearlight
   xpos -590
   ypos -426
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -664
   ypos -368
  }
push $Nd155290
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -266
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -234
   disable true
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -176
  }
set Nd1a1aa0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -376
   ypos -112
  }
push $Nd1a1aa0
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -112
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -48
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos -2
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
 end_group
add_layer {pinlight pinlight.red pinlight.green pinlight.blue pinlight.alpha}
 Group {
  inputs 0
  name pLit
  tile_color 0x1e35ff
  label pLit_PIN_LIGHT
  xpos -88
  ypos 208
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 255
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -768
  }
set Nd1ffbc0 [stack 0]
  Shuffle {
   in pinlight
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -560
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -808
   ypos -686
   number 1
  }
set Nd213ac0 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nd1ffbc0
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -144
  }
set Nd236e30 [stack 0]
push $Nd236e30
push $Nd236e30
push $Nd1ffbc0
push $Nd213ac0
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -658
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -582
   disable true
  }
  set Cd255a00 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -544
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cd26a2f0 [stack 0]
set Nd26a2f0 [stack 0]
push $Nd26a2f0
push $Nd1ffbc0
clone $Cd255a00 {
   xpos -520
   ypos -592
   selected false
  }
clone $Cd26a2f0 {
   xpos -520
   ypos -544
   selected false
  }
set Nd290240 [stack 0]
  MergeExpression {
   inputs 2
   expr0 "((Ar < 0.5) ? min(Br, (2.0 * Ar)) : max(Br, (2.0 *(Ar - 0.5))))"
   expr1 "((Ag < 0.5) ? min(Bg, (2.0 * Ag)) : max(Bg, (2.0 *(Ag - 0.5))))"
   expr2 "((Ab < 0.5) ? min(Bb, (2.0 * Ab)) : max(Bb, (2.0 *(Ab - 0.5))))"
   name pinlight
   xpos -584
   ypos -448
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -664
   ypos -390
  }
push $Nd290240
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -288
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -244
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -186
   disable true
  }
set Nd2dc9d0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -387
   ypos -130
  }
push $Nd2dc9d0
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -112
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -76
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos 10
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
 end_group
add_layer {hardmix hardmix.red hardmix.green hardmix.blue hardmix.alpha}
 Group {
  inputs 0
  name hMix
  tile_color 0x1e35ff
  label hMix_HARD_MIX
  xpos -88
  ypos 272
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 255
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -768
  }
set Nd33a910 [stack 0]
  Shuffle {
   in hardmix
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -560
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -856
   ypos -704
   number 1
  }
set Nd34e800 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -240
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nd33a910
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -240
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -112
  }
set Nd371b80 [stack 0]
push $Nd371b80
push $Nd371b80
push $Nd33a910
push $Nd34e800
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -658
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -582
   disable true
  }
  set Cd390710 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -544
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cd3a5000 [stack 0]
set Nd3a5000 [stack 0]
push $Nd3a5000
push $Nd33a910
clone $Cd390710 {
   xpos -520
   ypos -592
   selected false
  }
clone $Cd3a5000 {
   xpos -520
   ypos -544
   selected false
  }
set Nd3caf50 [stack 0]
  MergeExpression {
   inputs 2
   expr0 "((Ar < 0.5) ? (((2.0 * Ar) == 0.0) ? (2.0 * Ar) : max((1.0 - ((1.0 - Br) / (2.0 * Ar))), 0.0)) : (((2.0 * (Ar - 0.5)) == 1.0) ? (2.0 * (Ar - 0.5)) : min(Br / (1.0 - (2.0 * (Ar - 0.5))), 1.0)) ) < 0.5 ? 0.0 : 1.0"
   expr1 "((Ag < 0.5) ? (((2.0 * Ag) == 0.0) ? (2.0 * Ag) : max((1.0 - ((1.0 - Bg) / (2.0 * Ag))), 0.0)) : (((2.0 * (Ag - 0.5)) == 1.0) ? (2.0 * (Ag - 0.5)) : min(Bg / (1.0 - (2.0 * (Ag - 0.5))), 1.0)) ) < 0.5 ? 0.0 : 1.0"
   expr2 "((Ab < 0.5) ? (((2.0 * Ab) == 0.0) ? (2.0 * Ab) : max((1.0 - ((1.0 - Bb) / (2.0 * Ab))), 0.0)) : (((2.0 * (Ab - 0.5)) == 1.0) ? (2.0 * (Ab - 0.5)) : min(Bb / (1.0 - (2.0 * (Ab - 0.5))), 1.0)) ) < 0.5 ? 0.0 : 1.0"
   name Hardmix
   xpos -586
   ypos -448
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -664
   ypos -390
  }
push $Nd3caf50
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -288
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -256
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -198
   disable true
  }
set Nd4178e0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -401
   ypos -161
  }
push $Nd4178e0
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -129
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -80
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos -2
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
 end_group
add_layer {difference difference.red difference.green difference.blue difference.alpha}
 Group {
  inputs 0
  name diff
  tile_color 0x1e35ff
  label diff_DIFFERENCE
  xpos -232
  ypos -80
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 255
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name A
   xpos -856
   ypos -666
   number 1
  }
set Nd475830 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -730
  }
set Nd489560 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -144
  }
set Nd49d460 [stack 0]
push $Nd49d460
push $Nd49d460
push $Nd489560
push $Nd475830
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -620
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -544
  }
  set Cd4bbfe0 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -506
   disable true
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cd4d08d0 [stack 0]
set Nd4d08d0 [stack 0]
push $Nd4d08d0
push $Nd489560
clone $Cd4bbfe0 {
   xpos -520
   ypos -554
   selected false
  }
clone $Cd4d08d0 {
   xpos -520
   ypos -506
   selected false
  }
set Nd4f6800 [stack 0]
  Merge2 {
   inputs 2
   operation difference
   bbox A
   name Difference
   xpos -585
   ypos -426
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -664
   ypos -352
  }
push $Nd4f6800
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -250
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -218
   disable true
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -160
  }
set Nd544f10 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -376
   ypos -63
  }
push $Nd544f10
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -48
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos 8
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos 54
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 104
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
push $Nd489560
  Shuffle {
   in difference
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -578
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
 end_group
add_layer {exclusion exclusion.red exclusion.green exclusion.blue exclusion.alpha}
 Group {
  inputs 0
  name smud
  tile_color 0x1e35ff
  label smud_EXCLUSION
  xpos -232
  ypos -16
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 255
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name A
   xpos -808
   ypos -650
   number 1
  }
set Nd5b22c0 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -714
  }
set Nd5c61b0 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -144
  }
set Nd5da0b0 [stack 0]
push $Nd5da0b0
push $Nd5da0b0
push $Nd5c61b0
push $Nd5b22c0
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -604
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -528
  }
  set Cd5f8c30 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -490
   disable true
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cd60d520 [stack 0]
set Nd60d520 [stack 0]
push $Nd60d520
push $Nd5c61b0
clone $Cd5f8c30 {
   xpos -520
   ypos -538
   selected false
  }
clone $Cd60d520 {
   xpos -520
   ypos -490
   selected false
  }
set Nd633450 [stack 0]
  Merge2 {
   inputs 2
   operation exclusion
   bbox A
   name Difference
   xpos -585
   ypos -410
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -664
   ypos -336
  }
push $Nd633450
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -234
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -202
   disable true
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -144
  }
set Nd681b80 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -408
   ypos -118
  }
push $Nd681b80
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -80
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -48
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos -2
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
push $Nd5c61b0
  Shuffle {
   in exclusion
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -574
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
 end_group
add_layer {subtrack subtrack.red subtrack.green subtrack.blue subtrack.alpha}
 Group {
  inputs 0
  name fsub
  tile_color 0x1e35ff
  label fsub_SUBTRACT
  xpos -232
  ypos 48
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 255
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -714
  }
set Nd6ef150 [stack 0]
  Shuffle {
   in subtrack
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -560
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name A
   xpos -808
   ypos -618
   number 1
  }
set Nd703040 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nd6ef150
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -144
  }
set Nd7263e0 [stack 0]
push $Nd7263e0
push $Nd7263e0
push $Nd6ef150
push $Nd703040
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -604
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -528
  }
  set Cd744f80 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -490
   disable true
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cd759870 [stack 0]
set Nd759870 [stack 0]
push $Nd759870
push $Nd6ef150
clone $Cd744f80 {
   xpos -520
   ypos -538
   selected false
  }
clone $Cd759870 {
   xpos -520
   ypos -490
   selected false
  }
set Nd77f790 [stack 0]
  Merge2 {
   inputs 2
   operation from
   bbox A
   name Difference
   xpos -568
   ypos -426
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -664
   ypos -336
  }
push $Nd77f790
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -234
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -202
   disable true
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -144
  }
set Nd7cde80 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -434
   ypos -102
  }
push $Nd7cde80
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -80
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -16
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos 22
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
 end_group
add_layer {divide divide.red divide.green divide.blue divide.alpha}
 Group {
  inputs 0
  name fdiv
  tile_color 0x1e35ff
  label fdiv_DIVIDE
  xpos -232
  ypos 112
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 255
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name A
   xpos -808
   ypos -766
   number 1
  }
set Nd82c020 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1000
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -862
  }
set Nd83fe00 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -856
   ypos -240
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -849
   ypos 25
  }
set Nd853d20 [stack 0]
push $Nd853d20
push $Nd853d20
push $Nd83fe00
push $Nd82c020
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -752
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -676
  }
  set Cd8728b0 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -638
   disable true
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cd8871a0 [stack 0]
set Nd8871a0 [stack 0]
push $Nd8871a0
  Expression {
   expr0 1/r
   expr1 1/g
   expr2 1/b
   name Divide
   xpos -329
   ypos -546
  }
push $Nd83fe00
clone $Cd8728b0 {
   xpos -520
   ypos -686
   selected false
  }
clone $Cd8871a0 {
   xpos -520
   ypos -638
   selected false
  }
set Nd8bafd0 [stack 0]
  Merge2 {
   inputs 2
   operation multiply
   bbox A
   name Merge35
   xpos -424
   ypos -519
  }
  Clamp {
   name Clamp1
   xpos -424
   ypos -484
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -712
   ypos -420
  }
push $Nd8bafd0
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -382
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -350
   disable true
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -292
  }
set Nd917e90 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -401
   ypos -176
  }
push $Nd917e90
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -144
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos -66
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos -2
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 80
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
push $Nd83fe00
  Shuffle {
   in divide
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -592
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
 end_group
add_layer {hue hue.red hue.green hue.blue hue.alpha}
 Group {
  inputs 0
  name hue
  tile_color 0x1e35ff
  label hue_HUE
  xpos -232
  ypos 176
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 255
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name A
   xpos -808
   ypos -648
   number 1
  }
set Nd985260 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -734
  }
set Nd998f30 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -144
  }
set Nd9ace40 [stack 0]
push $Nd9ace40
push $Nd9ace40
push $Nd998f30
push $Nd985260
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -664
   ypos -624
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -664
   ypos -548
   disable true
  }
  set Cd9cb9c0 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -664
   ypos -510
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cd9e02b0 [stack 0]
set Nd9e02b0 [stack 0]
push $Nd998f30
clone $Cd9cb9c0 {
   xpos -520
   ypos -558
   selected false
  }
clone $Cd9e02b0 {
   xpos -520
   ypos -510
   selected false
  }
set Nda061f0 [stack 0]
  Colorspace {
   colorspace_in sRGB
   colorspace_out CIE-LCH
   name Colorspace3
   xpos -422
   ypos -410
  }
push $Nd9e02b0
  Colorspace {
   colorspace_in sRGB
   colorspace_out CIE-LCH
   name Colorspace4
   xpos -328
   ypos -409
  }
  ShuffleCopy {
   inputs 2
   red red
   green green
   alpha black
   name ShuffleCopy1
   xpos -422
   ypos -350
  }
  Colorspace {
   colorspace_in CIE-LCH
   colorspace_out sRGB
   name Colorspace5
   xpos -422
   ypos -311
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -712
   ypos -292
  }
push $Nda061f0
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -520
   ypos -254
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -520
   ypos -222
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -520
   ypos -164
   disable true
  }
set Nda91520 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -405
   ypos -80
  }
push $Nda91520
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -48
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos 8
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos 54
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy2
   label "\[value in] to \[value out]"
   xpos -520
   ypos 104
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
push $Nd998f30
  Shuffle {
   in hue
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -624
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
 end_group
add_layer {saturation29 saturation29.red saturation29.green saturation29.blue saturation29.alpha}
 Group {
  inputs 0
  name sat
  tile_color 0x1e35ff
  label sat_SATURATION
  xpos -232
  ypos 240
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 74
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name A
   xpos -806
   ypos -638
   number 1
  }
set Ndafecc0 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -1048
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name B
   xpos -518
   ypos -734
  }
set Ndb12bb0 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -904
   ypos -272
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -144
  }
set Ndb26ad0 [stack 0]
push $Ndb26ad0
push $Ndb26ad0
push $Ndb12bb0
push $Ndafecc0
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -662
   ypos -624
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Colorspace {
   colorspace_out sRGB
   name Colorspace1
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -662
   ypos -548
   disable true
  }
  set Cdb45650 [stack 0]
  Grade {
   gamma 2.2
   black_clamp false
   name Gamma_22
   xpos -662
   ypos -510
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  set Cdb59f40 [stack 0]
set Ndb59f40 [stack 0]
push $Ndb12bb0
clone $Cdb45650 {
   xpos -518
   ypos -558
   selected false
  }
clone $Cdb59f40 {
   xpos -518
   ypos -510
   selected false
  }
set Ndb7fe60 [stack 0]
  Colorspace {
   colorspace_in sRGB
   colorspace_out CIE-LCH
   name Colorspace6
   xpos -422
   ypos -417
  }
push $Ndb59f40
  Colorspace {
   colorspace_in sRGB
   colorspace_out CIE-LCH
   name Colorspace7
   xpos -328
   ypos -418
  }
  ShuffleCopy {
   inputs 2
   red red
   blue blue
   name ShuffleCopy2
   xpos -422
   ypos -357
  }
  Colorspace {
   colorspace_in CIE-LCH
   colorspace_out sRGB
   name Colorspace8
   xpos -422
   ypos -318
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -710
   ypos -292
  }
push $Ndb7fe60
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -518
   ypos -254
  }
  Grade {
   gamma 2.2
   reverse true
   black_clamp false
   name gamma0454545
   xpos -518
   ypos -222
   addUserKnob {20 Utilities}
   addUserKnob {22 grade_channels_alpha l "                       channels alpha                       " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.channels_alpha()" +STARTLINE}
   addUserKnob {22 grade_maskChannel_alpha l "                     maskChannel alpha                      " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.maskChannel_alpha()" +STARTLINE}
   addUserKnob {22 ps_to_nuke_correct l "                     ps_to_nuke_correct                     " T "import node_function;nf=node_function.GradeNodeFunction(\"node\");nf.ps_to_nuke_correct()" +STARTLINE}
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace2
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -518
   ypos -164
   disable true
  }
set Ndc0b180 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy2
   xpos -280
   ypos -112
  }
push $Ndc0b180
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -520
   ypos -48
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -520
   ypos 8
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -520
   ypos 54
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 104
  }
  Output {
   name Output1
   xpos -520
   ypos 150
  }
push $Ndb12bb0
  Shuffle {
   in saturation29
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -664
   ypos -592
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
 end_group
 Group {
  inputs 0
  name colr
  tile_color 0x1e35ff
  label colr_COLOR
  xpos -376
  ypos 176
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 255
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name A
   xpos -856
   ypos -682
   number 1
  }
set Ndc78700 [stack 0]
  Shuffle {
   in alpha
   out rotopaint_mask
   name Shuffle3
   label "\[value in]"
   xpos -856
   ypos 144
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Ndc78700
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -952
   ypos -432
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name B
   xpos -520
   ypos -778
  }
set Ndc9b930 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -856
   ypos -400
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -952
   ypos -336
  }
set Ndcaf730 [stack 0]
push $Ndcaf730
push $Ndcaf730
push $Ndc9b930
push $Ndc78700
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -712
   ypos -624
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
set Ndcbec90 [stack 0]
push $Ndcbec90
  Colorspace {
   colorspace_out sRGB
   name Colorspace11
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -376
   ypos -592
  }
push $Ndc9b930
  Colorspace {
   colorspace_out sRGB
   name Colorspace10
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -88
   ypos -688
  }
set Ndce2bb0 [stack 0]
  MergeExpression {
   inputs 2
   temp_name0 luma
   temp_expr0 "0.3*Ar + 0.59*Ag + 0.11*Ab"
   temp_name1 lumb
   temp_expr1 "0.3*Br + 0.59*Bg + 0.11*Bb"
   temp_name2 diff
   temp_expr2 lumb-luma
   expr0 Ar+diff
   expr1 Ag+diff
   expr2 Ab+diff
   expr3 Ba
   name MergeExpression1
   xpos -306
   ypos -522
  }
  Expression {
   temp_name0 lum
   temp_expr0 "0.3*r + 0.59*g + 0.11*b"
   temp_name1 cmax
   temp_expr1 max(r,g,b)
   temp_name2 cmin
   temp_expr2 min(r,g,b)
   expr0 "cmin < 0.0 ? (lum + (((r-lum)*lum)/(lum-cmin))) : (cmax > 1.0 ? (lum + (((r-lum)*(1-lum))/(cmax-lum))) : r)"
   expr1 "cmin < 0.0 ? (lum + (((g-lum)*lum)/(lum-cmin))) : (cmax > 1.0 ? (lum + (((g-lum)*(1-lum))/(cmax-lum))) : g)"
   expr2 "cmin < 0.0 ? (lum + (((b-lum)*lum)/(lum-cmin))) : (cmax > 1.0 ? (lum + (((b-lum)*(1-lum))/(cmax-lum))) : b)"
   name Expression2
   xpos -306
   ypos -490
  }
push $Ndce2bb0
  Dissolve {
   inputs 2
   channels rgb
   which {{opacity/255}}
   name Dissolve1
   label "\[value which]"
   xpos -280
   ypos -368
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace12
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -328
   ypos -272
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -376
   ypos -176
  }
push $Ndc9b930
  Merge2 {
   inputs 2
   operation matte
   name Merge2
   xpos -472
   ypos -138
  }
set Ndd3fc60 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy3
   xpos -353
   ypos -11
  }
push $Ndd3fc60
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -472
   ypos 16
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -472
   ypos 80
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -472
   ypos 150
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -520
   ypos 208
  }
  Copy {
   inputs 2
   from0 -rgba.alpha
   to0 -rgba.alpha
   channels rotopaint_mask
   name Copy2
   xpos -520
   ypos 265
  }
  Output {
   name Output1
   xpos -520
   ypos 374
  }
push $Ndc9b930
  Shuffle {
   in none
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -690
   ypos -432
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
 end_group
 Group {
  inputs 0
  name lum
  tile_color 0x1e35ff
  label lum_LUMINOSITY
  xpos -376
  ypos 240
  addUserKnob {20 User l PSDMerge}
  addUserKnob {41 in l passname T Shuffle_set_from_script.in}
  addUserKnob {3 opacity}
  opacity 255
  addUserKnob {6 set_white_alpha +STARTLINE}
  addUserKnob {6 CopyAlphaFromB +STARTLINE}
 }
  Input {
   inputs 0
   name A
   xpos -856
   ypos -490
   number 1
  }
set Nddb5790 [stack 0]
  Shuffle {
   red white
   out alpha
   name if_first_merge
   label "\[value in]"
   xpos -520
   ypos -368
   disable {{1-set_white_alpha}}
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Shuffle {
   inputs 0
   in none
   name Shuffle_set_from_script
   label "\[value in]"
   xpos -684
   ypos -592
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
push $Nddb5790
  Shuffle {
   in mask
   out alpha
   name Shuffle2
   label "\[value in]"
   xpos -856
   ypos -304
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Input {
   inputs 0
   name B
   xpos -424
   ypos -746
  }
set Ndde8220 [stack 0]
  Shuffle {
   in mask
   out alpha
   name Shuffle1
   label "\[value in]"
   xpos -712
   ypos -336
   addUserKnob {20 Utilities}
   addUserKnob {22 shaffle_plus_channel l "                    shaffle plus channel                    " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.plus_channel()" +STARTLINE}
   addUserKnob {22 shuffle_all_color l "                   shuffle all color: RED                   " T "import node_function;nf=node_function.ShuffleNodeFunction(\"node\");nf.all_color(\"red\")" +STARTLINE}
  }
  Merge2 {
   inputs 2
   operation screen
   Achannels alpha
   Bchannels alpha
   output alpha
   name Merge1
   xpos -712
   ypos -240
  }
set Nddfc070 [stack 0]
push $Nddfc070
push $Nddfc070
push $Ndde8220
push $Ndde8220
  Colorspace {
   colorspace_out sRGB
   name Colorspace11
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -424
   ypos -432
  }
set Nde0b5b0 [stack 0]
push $Nddb5790
  Colorspace {
   colorspace_out sRGB
   name Colorspace10
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -164
   ypos -496
  }
  MergeExpression {
   inputs 2
   temp_name0 luma
   temp_expr0 "0.3*Ar + 0.59*Ag + 0.11*Ab"
   temp_name1 lumb
   temp_expr1 "0.3*Br + 0.59*Bg + 0.11*Bb"
   temp_name2 diff
   temp_expr2 lumb-luma
   expr0 Ar+diff
   expr1 Ag+diff
   expr2 Ab+diff
   expr3 Ba
   name MergeExpression1
   xpos -232
   ypos -362
  }
  Expression {
   temp_name0 lum
   temp_expr0 "0.3*r + 0.59*g + 0.11*b"
   temp_name1 cmax
   temp_expr1 max(r,g,b)
   temp_name2 cmin
   temp_expr2 min(r,g,b)
   expr0 "cmin < 0.0 ? (lum + (((r-lum)*lum)/(lum-cmin))) : (cmax > 1.0 ? (lum + (((r-lum)*(1-lum))/(cmax-lum))) : r)"
   expr1 "cmin < 0.0 ? (lum + (((g-lum)*lum)/(lum-cmin))) : (cmax > 1.0 ? (lum + (((g-lum)*(1-lum))/(cmax-lum))) : g)"
   expr2 "cmin < 0.0 ? (lum + (((b-lum)*lum)/(lum-cmin))) : (cmax > 1.0 ? (lum + (((b-lum)*(1-lum))/(cmax-lum))) : b)"
   name Expression2
   xpos -232
   ypos -330
  }
push $Nde0b5b0
  Merge2 {
   inputs 2
   operation matte
   mix {{opacity/255}}
   name Merge2
   xpos -280
   ypos -266
  }
  Colorspace {
   colorspace_in sRGB
   name Colorspace12
   label "\[value colorspace_in] >> \[value colorspace_out]"
   xpos -280
   ypos -208
  }
set Nde5f1f0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos -184
   ypos -144
  }
push $Nde5f1f0
  Switch {
   inputs 2
   which {{CopyAlphaFromB}}
   name IF_UPLtCCM
   label "\[value which]"
   xpos -328
   ypos -112
  }
  Add {
   inputs 1+1
   channels alpha
   value 3
   name Add1
   xpos -328
   ypos -48
  }
  Multiply {
   inputs 1+1
   channels rgba
   value 0
   name Multiply1
   xpos -328
   ypos 22
  }
  ShuffleCopy {
   inputs 2
   in alpha
   red red
   out mask
   name ShuffleCopy1
   label "\[value in] to \[value out]"
   xpos -328
   ypos 48
  }
  Output {
   name Output1
   xpos -376
   ypos 118
  }
 end_group
 Group {
  inputs 0
  name Project_or_Panorama_RenderGroup
  tile_color 0xff9b30ff
  label "SphereRadius: \[value ProjectSphereRadius]\nProjectFrame: \[value ProjectFrameHold]\nProjectFocal: \[value Hold_CAMERA_Project.focal]\nUsedSphereUV: \[value DontProjectUseUV]"
  xpos 248
  ypos 412
  addUserKnob {20 ProjectRenderSettings}
  addUserKnob {26 RenderSettings l RenderSettings:}
  addUserKnob {6 OUTPUT3D l "Output 3D" +STARTLINE}
  addUserKnob {41 box_width l width/height T RenderResolution.box_width}
  addUserKnob {41 box_height l "" -STARTLINE T RenderResolution.box_height}
  addUserKnob {26 pp l ProjectToSphere:}
  addUserKnob {7 ProjectFocalOffset l FocalOffset R -20 20}
  addUserKnob {7 ProjectSphereRadius l SphereRadius R 1000 100000}
  ProjectSphereRadius 100000
  addUserKnob {3 ProjectFrameHold l FrameHold}
  ProjectFrameHold 57
  addUserKnob {26 SpherePanorama l SpherePanorama:}
  addUserKnob {6 DontProjectUseUV l "Dont Project Use SphereUV" +STARTLINE}
  addUserKnob {7 SphereRadius R 1000 100000}
  SphereRadius 100000
  addUserKnob {13 SphereTranslate}
  addUserKnob {13 SphereRotate}
 }
  Input {
   inputs 0
   name IMG
   xpos 248
   ypos -938
  }
  Dot {
   name Dot13
   tile_color 0xa0ffffff
   label IMG
   xpos 282
   ypos -870
  }
set Ndec3b90 [stack 0]
  Sphere {
   radius {{SphereRadius}}
   translate {{SphereTranslate.x} {SphereTranslate.y} {SphereTranslate.z}}
   rotate {{SphereRotate.x} {SphereRotate.y} {SphereRotate.z}}
   name SphereUV
   label "\[knob radius]"
   xpos 8
   ypos -624
  }
  Input {
   inputs 0
   name ProjectCamera
   label "\n"
   xpos 488
   ypos -746
   number 1
  }
  Camera2 {
   focal {{parent.input1.focal+ProjectFocalOffset}}
   haperture {{parent.input1.haperture}}
   vaperture {{parent.input1.vaperture}}
   near {{parent.input1.near}}
   far {{parent.input1.far}}
   name Hold_CAMERA_Project
   xpos 354
   ypos -766
   addUserKnob {20 Utilities}
   addUserKnob {22 camera_set_near_and_far_value l "               set camera near and far values               " T "import node_function;nf=node_function.Camera2NodeFunction('node');nf.set_near_and_far_value()" +STARTLINE}
  }
  FrameHold {
   first_frame {{ProjectFrameHold}}
   name FrameHold1
   xpos 344
   ypos -656
  }
  Dot {
   name Dot12
   tile_color 0x97883dff
   xpos 330
   ypos -582
  }
set Ndf00380 [stack 0]
push $Ndf00380
push $Ndec3b90
  Project3D2 {
   inputs 2
   name Project3D2
   xpos 248
   ypos -682
  }
  Sphere {
   radius {{ProjectSphereRadius}}
   name Sphere_RADIUS1
   label "\[knob radius]"
   xpos 200
   ypos -624
  }
  TransformGeo {
   inputs 2
   name TransformGeo2
   xpos 200
   ypos -554
  }
  Switch {
   inputs 2
   which {{DontProjectUseUV}}
   name Switch1
   label "\[value which]"
   xpos 104
   ypos -496
  }
  Scene {
   name RENDER_OBJ1
   xpos 210
   ypos -478
  }
set Ndf38f80 [stack 0]
  Input {
   inputs 0
   name StereoCameraJoin
   xpos 488
   ypos -362
   number 2
  }
set Ndf43e50 [stack 0]
push $Ndf43e50
push $Ndf38f80
  Reformat {
   inputs 0
   type "to box"
   box_width 2100
   box_height 858
   box_fixed true
   name RenderResolution
   label "width: \[value box_width]\nheight: \[value box_height]"
   xpos -88
   ypos -375
  }
add_layer {wP wP.x wP.y wP.z wP.red}
  ScanlineRender {
   inputs 3
   conservative_shader_sampling false
   filter Mitchell
   motion_vectors_type velocity
   MB_channel motion
   output_shader_vectors true
   P_channel wP
   name ScanlineRender2
   xpos 248
   ypos -362
  }
  MotionBlur3D {
   inputs 2
   Z -depth.Z
   distance 1000
   name MotionBlur3D1
   xpos 248
   ypos -234
  }
  VectorBlur {
   uv motion
   name VectorBlur2
   xpos 248
   ypos -176
  }
  Switch {
   inputs 2
   which {{OUTPUT3D}}
   name Switch2
   label "\[value which]"
   xpos 104
   ypos -112
  }
  Dot {
   name Dot20
   tile_color 0x87ffffff
   xpos 234
   ypos -38
  }
  Output {
   name Output1
   xpos 200
   ypos 22
  }
 end_group
end_group
